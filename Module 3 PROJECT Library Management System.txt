-- Create the database
CREATE DATABASE library;

-- Use the database
USE library;

-- Create Branch table
CREATE TABLE Branch (
    Branch_no INT PRIMARY KEY,
    Manager_Id INT,
    Branch_address VARCHAR(255),
    Contact_no VARCHAR(15)
);
INSERT INTO Branch (Branch_no, Manager_Id, Branch_address, Contact_no) VALUES
(1, 101, '123 Main St, CityA', '123-456-7890'),
(2, 102, '456 Side St, CityB', '987-654-3210');

-- Create Employee table
CREATE TABLE Employee (
    Emp_Id INT PRIMARY KEY,
    Emp_name VARCHAR(100),
    Position VARCHAR(50),
    Salary DECIMAL(10, 2),
    Branch_no INT,
    FOREIGN KEY (Branch_no) REFERENCES Branch(Branch_no)
);
INSERT INTO Employee (Emp_Id, Emp_name, Position, Salary, Branch_no) VALUES
(1, 'Alice Smith', 'Librarian', 35000.00, 1),
(2, 'Bob Johnson', 'Assistant', 28000.00, 2);

-- Create Books table
CREATE TABLE Books (
    ISBN VARCHAR(20) PRIMARY KEY,
    Book_title VARCHAR(255),
    Category VARCHAR(50),
    Rental_Price DECIMAL(10, 2),
    Status ENUM('yes', 'no'),
    Author VARCHAR(100),
    Publisher VARCHAR(100)
);
INSERT INTO Books (ISBN, Book_title, Category, Rental_Price, Status, Author, Publisher) VALUES
('978-3-16-148410-0', 'Book One', 'Fiction', 5.00, 'yes', 'Author A', 'Publisher A'),
('978-1-23-456789-7', 'Book Two', 'Non-Fiction', 7.50, 'no', 'Author B', 'Publisher B');

-- Create Customer table
CREATE TABLE Customer (
    Customer_Id INT PRIMARY KEY,
    Customer_name VARCHAR(100),
    Customer_address VARCHAR(255),
    Reg_date DATE
);
INSERT INTO Customer (Customer_Id, Customer_name, Customer_address, Reg_date) VALUES
(1, 'John Doe', '789 Oak St, CityC', '2023-01-15'),
(2, 'Jane Roe', '101 Pine St, CityD', '2023-03-22');

-- Create IssueStatus table
CREATE TABLE IssueStatus (
    Issue_Id INT PRIMARY KEY,
    Issued_cust INT,
    Issued_book_name VARCHAR(255),
    Issue_date DATE,
    Isbn_book VARCHAR(20),
    FOREIGN KEY (Issued_cust) REFERENCES Customer(Customer_Id),
    FOREIGN KEY (Isbn_book) REFERENCES Books(ISBN)
);
INSERT INTO IssueStatus (Issue_Id, Issued_cust, Issued_book_name, Issue_date, Isbn_book) VALUES
(1, 1, 'Book One', '2023-09-01', '978-3-16-148410-0'),
(2, 2, 'Book Two', '2023-09-15', '978-1-23-456789-7');

-- Create ReturnStatus table
CREATE TABLE ReturnStatus (
    Return_Id INT PRIMARY KEY,
    Return_cust INT,
    Return_book_name VARCHAR(255),
    Return_date DATE,
    Isbn_book2 VARCHAR(20),
    FOREIGN KEY (Return_cust) REFERENCES Customer(Customer_Id),
    FOREIGN KEY (Isbn_book2) REFERENCES Books(ISBN)
);
INSERT INTO ReturnStatus (Return_Id, Return_cust, Return_book_name, Return_date, Isbn_book2) VALUES
(1, 1, 'Book One', '2023-09-15', '978-3-16-148410-0'),
(2, 2, 'Book Two', '2023-09-20', '978-1-23-456789-7');

--1. Retrieve the book title, category, and rental price of all available books.
SELECT Book_title, Category, Rental_Price
FROM Books
WHERE Status = 'yes';

--2. List the employee names and their respective salaries in descending order of salary. 
SELECT Emp_name, Salary
FROM Employee
ORDER BY Salary DESC;

--3. Retrieve the book titles and the corresponding customers who have issued those books. 
SELECT B.Book_title, C.Customer_name
FROM IssueStatus IS
JOIN Books B ON IS.Isbn_book = B.ISBN
JOIN Customer C ON IS.Issued_cust = C.Customer_Id;

--4. Display the total count of books in each category. 
SELECT Category, COUNT(*) AS Total_Books
FROM Books
GROUP BY Category;

--5. Retrieve the employee names and their positions for the employees whose salaries are above Rs.50,000. 
SELECT Emp_name, Position
FROM Employee
WHERE Salary > 50000;

--6. List the customer names who registered before 2022-01-01 and have not issued any books yet. 
SELECT C.Customer_name
FROM Customer C
LEFT JOIN IssueStatus I ON C.Customer_Id = I.Issued_cust
WHERE C.Reg_date < '2022-01-01' AND I.Issue_Id IS NULL;

--7. Display the branch numbers and the total count of employees in each branch. 
SELECT E.Branch_no, COUNT(E.Emp_Id) AS Total_Employees
FROM Employee E
GROUP BY E.Branch_no;

--8. Display the names of customers who have issued books in the month of June 2023. 
SELECT DISTINCT C.Customer_name
FROM Customer C
JOIN IssueStatus I ON C.Customer_Id = I.Issued_cust
WHERE I.Issue_date >= '2023-06-01' AND I.Issue_date < '2023-07-01';

--9. Retrieve book_title from book table containing history. 
SELECT Book_title
FROM Books
WHERE Book_title LIKE '%history%';

--10.Retrieve the branch numbers along with the count of employees for branches having more than 5 employees 
SELECT Branch_no, COUNT(Emp_Id) AS Employee_Count
FROM Employee
GROUP BY Branch_no
HAVING COUNT(Emp_Id) > 5;

--11. Retrieve the names of employees who manage branches and their respective branch addresses. 
SELECT E.Emp_name, B.Branch_address
FROM Employee E
JOIN Branch B ON E.Branch_no = B.Branch_no
WHERE E.Position = 'Manager';

--12. Display the names of customers who have issued books with a rental price higher than Rs. 25. 
SELECT C.Customer_name
FROM Customer C
JOIN IssueStatus I ON C.Customer_Id = I.Issued_cust
JOIN Books B ON I.ISBN_book = B.ISBN
WHERE B.Rental_Price > 25;
